name: "Check code format and quality"

on:
  push:
    branches: [develop, main, sonar-cloud]
  pull_request:
    types: [opened, ready_for_review, synchronize, reopened]

permissions:
  contents: read

jobs:
  check-code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check text files format
        run: |
          build/automation/etc/githooks/scripts/editorconfig-pre-commit.sh
      - name: Tester Build
        run: |
          make tester-build
      - name: Check Python Unit Test Coverage
        run: |
          make coverage-report
      - name: Perform SonarCloud static analysis
        uses: sonarsource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ vars.SONAR_ORGANISATION_KEY }}
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.version=3.12
            -Dproject.settings=./scripts/config/sonar-scanner.properties
        continue-on-error: true # quick toggle to disable sonar-cloud if down
  check-markdown-code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Markdown format
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          config: .github/workflows/configs/markdownlint/.markdownlint.json
      - name: Check Markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "yes"
          config-file: .github/workflows/configs/markdownlint/markdown-check-links.json
          base-branch: develop
          check-modified-files-only: "yes"

  check-prose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check prose
        uses: errata-ai/vale-action@reviewdog
        with:
          fail_on_error: true

  check-python-code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Tester Build
        run: |
          make tester-build
      - name: Run Python Linting & Formatting
        run: |
          make python-run-ruff-checks
      - name: Check for Python Dead Code
        run: |
          make python-check-dead-code
