# For documentation see here - https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml
service: uec-dos-integration
frameworkVersion: '2'
variablesResolutionMode: 20210326
configValidationMode: error
unresolvedVariablesNotificationMode: error

provider:
  name: aws
  lambdaHashingVersion: 20201221
  architecture: x86_64
  region: ${env:AWS_REGION}
  deploymentBucket:
    blockPublicAccess: true
    skipPolicySetup: true
  tags:
    Environment: ${env:ENVIRONMENT}
    PROFILE: ${env:PROFILE}
    Product: ${env:PROJECT_GROUP_SHORT}
    Programme: ${env:PROGRAMME}
    Service: ${env:PROJECT_GROUP_SHORT}
  environment:
    POWERTOOLS_SERVICE_NAME: ${env:PROGRAMME}-${env:TEAM_ID}-${sls:stage}
    POWERTOOLS_TRACER_CAPTURE_RESPONSE: true
    POWERTOOLS_TRACER_CAPTURE_ERROR: true
    POWERTOOLS_TRACE_MIDDLEWARES: true
  tracing:
    lambda: true

custom:
  custom:
  localstack:
    stages: local
  vpcDiscovery:
  # Documentation - https://www.serverless.com/plugins/serverless-vpc-discovery
    vpcName: '${env:AWS_VPC_NAME}'
    subnets:
      - tagKey: Name
        tagValues:
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}a'
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}b'
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}c'
    securityGroups:
      - tagKey: Name
        tagValues:
          - '${env:TF_VAR_lambda_security_group_name}'

plugins:
  - serverless-vpc-discovery
  - serverless-localstack
functions:
  event-sender:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/event-sender:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-event-sender
    description: ${sls:stage} Event Sender lambda
    memorySize: 512
    timeout: 10
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_event_sender_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      DOS_API_GATEWAY_USERNAME: ${env:DOS_API_GATEWAY_USERNAME}
      DOS_API_GATEWAY_PASSWORD: ${env:DOS_API_GATEWAY_PASSWORD}
      DOS_API_GATEWAY_REQUEST_TIMEOUT: ${env:DOS_API_GATEWAY_REQUEST_TIMEOUT}
      DOS_API_GATEWAY_URL: ${env:DOS_API_GATEWAY_URL}
      MOCK_MODE: ${env:MOCK_MODE}

  event-processor:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/event-processor:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-event-processor
    description: ${sls:stage} Event Processor lambda
    memorySize: 256
    timeout: 120
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_event_processor_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      DB_SERVER: ${env:DB_SERVER}
      DB_PORT: ${env:DB_PORT}
      DB_NAME: ${env:DB_NAME}
      DB_SCHEMA: ${env:DB_SCHEMA}
      DB_USER_NAME: ${env:DB_USER_NAME}
      DB_SECRET_NAME: ${env:DB_SECRET_NAME}
      DB_PASSWORD: ${env:DB_PASSWORD}
      EVENT_SENDER_LAMBDA_NAME: ${env:PROJECT_ID}-${sls:stage}-event-sender
      MOCK_MODE: ${env:MOCK_MODE}
