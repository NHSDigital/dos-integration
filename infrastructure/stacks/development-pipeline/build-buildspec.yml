version: 0.2

#env:
  #variables:
    # key: "value"
    # key: "value"
  #parameter-store:
    # key: "value"
    # key: "value"
  #secrets-manager:
    # key: secret-id:json-key:version-stage:version-id
    # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
    # - variable
    # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    runtime-versions:
      docker: 19
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  pre_build:
    commands:

      - docker --version
      - docker-compose --version
      - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose
      - docker-compose --version
      - temp_role=$(aws sts assume-role --role-arn "arn:aws:iam::$AWS_ACCOUNT_ID_NONPROD:role/UECPUPipelineBuildRole" --role-session-name "CodeBuildSession")
      - export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
      - aws sts get-caller-identity
      - make docker-hub-signin
      # - command
  build:
    commands:
      - docker --version
      - echo "[Building docker containers]"
      - make $BUILD_TARGET VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION
      # - make tester-build
      # - make mock-dos-db-setup
      # - make start PROFILE=pipeline-component-test
      # - sleep 40
      # - docker ps
      # - make component-test PROFILE=pipeline-component-test
      - echo "[Pushing images to ECR]"
      - echo $CODEBUILD_SOURCE_VERSION
      - make docker-push NAME=$BUILD_ITEM_NAME

      # - command
  # post_build:
  #   commands:
  #     - echo "[Pushing images to ECR]"
  #     - echo $CODEBUILD_SOURCE_VERSION
  #     - make push-images VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION
# reports: #New
#   BehaveReports: # CodeBuild will create a report group called "BehaveReports".
#     files: #Store all of the files
#       - '**/*'
#     base-directory: $CODEBUILD_SRC_DIR/test/component/reports
#     discard-paths: yes
#     file-format: JUNITXML
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths
