# For documentation see here - https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml
service: dos-integration
frameworkVersion: '2'

configValidationMode: error
projectDir: ./

provider:
  name: aws
  runtime: python3.9
  lambdaHashingVersion: 20201221
  architecture: x86_64
  region: ${env:AWS_REGION}


plugins:
  - serverless-localstack
custom:
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    host: http://localhost
    edgePort: 4566
    # autostart: true
    # lambda:
    #   mountCode: True
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: False


functions:
  event-sender:
    handler: event_sender.lambda_handler # The file and module for this specific function. Cannot be used when `image` is defined.
    # image: baseimage # Image to be used by function, cannot be used when `handler` is defined. It can be configured as concrete uri of Docker image in ECR or as a reference to image defined in `provider.ecr.images`
    architecture: x86_64 # Instruction set architecture of a Lambda function (for ARM, AWS Graviton2 processor based, set it to 'arm64')
    name: $(env:SERVICE_PREFIX)-${sls:stage}-event-sender # optional, Deployed Lambda name
    description: My function # The description of your function.
    # memorySize: 512 # memorySize for this specific function.
    # environment: # Function level environment variables
    #   functionEnvVar: 12345678
    tags: # Function specific tags
      foo: bar
    # vpc: # Optional VPC. But if you use VPC then both subproperties (securityGroupIds and subnetIds) are required
    #   securityGroupIds:
    #     - securityGroupId1
    #     - securityGroupId2
    #   subnetIds:
    #     - subnetId1
    #     - subnetId2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
